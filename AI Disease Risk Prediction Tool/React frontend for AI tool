# Install Required Dependencies
npx create-react-app health-risk-predictor
cd health-risk-predictor
npm install axios react-toastify

#Create the React App
#Inside the React project (health-risk-predictor), replace src/App.js with the following code:
import React, { useState } from "react";
import axios from "axios";
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";

function App() {
  // State variables to store user input
  const [formData, setFormData] = useState({
    age: "",
    bmi: "",
    blood_pressure: "",
    smoking_status: "0",
    activity_level: "5",
    email: "",
    phone: "",
  });

  const [riskResult, setRiskResult] = useState(null);

  // Handle form input changes
  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  // Handle form submission
  const handleSubmit = async (e) => {
    e.preventDefault();

    try {
      const response = await axios.post("http://localhost:8000/predict_risk/", formData);
      setRiskResult(response.data);
      toast.success("Prediction successful!");
    } catch (error) {
      console.error("Error:", error);
      toast.error("Something went wrong!");
    }
  };

  return (
    <div className="container">
      <h1>üíô AI Health Risk Predictor</h1>
      <p>Enter your health data to assess your risk for cardiovascular disease.</p>

      <form onSubmit={handleSubmit} className="form">
        <label>Age:</label>
        <input type="number" name="age" value={formData.age} onChange={handleChange} required />

        <label>BMI:</label>
        <input type="number" name="bmi" value={formData.bmi} onChange={handleChange} required />

        <label>Blood Pressure:</label>
        <input type="number" name="blood_pressure" value={formData.blood_pressure} onChange={handleChange} required />

        <label>Smoking Status:</label>
        <select name="smoking_status" value={formData.smoking_status} onChange={handleChange}>
          <option value="0">Non-Smoker</option>
          <option value="1">Smoker</option>
        </select>

        <label>Activity Level (1-10):</label>
        <input type="number" name="activity_level" value={formData.activity_level} onChange={handleChange} min="1" max="10" required />

        <label>Email:</label>
        <input type="email" name="email" value={formData.email} onChange={handleChange} required />

        <label>Phone:</label>
        <input type="tel" name="phone" value={formData.phone} onChange={handleChange} required />

        <button type="submit">Predict Risk</button>
      </form>

      {riskResult && (
        <div className="result">
          <h2>ü©∫ Health Risk Prediction</h2>
          <p>
            <strong>Risk Score:</strong> {riskResult.risk_score === 1 ? "‚ö†Ô∏è High Risk" : "‚úÖ Low Risk"}
          </p>
          <p>{riskResult.message}</p>
        </div>
      )}

      <ToastContainer />
    </div>
  );
}

export default App;

# Add Styling
# Replace the contents of src/App.css with the following:
body {
  font-family: Arial, sans-serif;
  background: #f5f5f5;
  text-align: center;
}

.container {
  max-width: 500px;
  margin: 50px auto;
  padding: 20px;
  background: white;
  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
  border-radius: 8px;
}

h1 {
  color: #007bff;
}

p {
  color: #333;
}

.form {
  display: flex;
  flex-direction: column;
  gap: 10px;
}

input,
select {
  padding: 8px;
  font-size: 16px;
  border: 1px solid #ccc;
  border-radius: 4px;
}

button {
  background: #007bff;
  color: white;
  font-size: 16px;
  padding: 10px;
  border: none;
  cursor: pointer;
  border-radius: 4px;
}

button:hover {
  background: #0056b3;
}

.result {
  margin-top: 20px;
  padding: 15px;
  background: #e3f2fd;
  border-radius: 4px;
}

# Run the Frontend
npm start

# Connect to the FastAPI Backend
uvicorn app:app --reload
